//requires
var http = require("http");
var https = require("https");
var fs = require("fs");
var fsPromises = require("fs").promises;
var url = require("url");
var args = require("optimist").argv;
var nsw_errors = require("./mod/errors");
var _md = require("remarkable");
var mdfm = require("front-matter");
var mdx = [];

//declarations
var cmd = process.argv[2];

//markdown parser
var md = new _md();
var mdi;
for (mdi = 0; mdi < mdx.length; mdi++) {
  md.use(mdi[i]);
};


//config
var cfgport = (args.port ? args.port : 8080);
var cfgroot = (args.path ? args.path : "/var/www/html");

//action checks
if (cmd == "start") {
  //runs from /var/www/html
  var server = http.createServer();
  server.listen(cfgport);
  console.info("HTTP server created successfully at port "+cfgport+" with root dir "+cfgroot);
  server.on("request",function(request,response){
    let rqurl = url.parse(request.url);
    let fullpath = cfgroot + rqurl.pathname;
    console.log('User accessed ' + rqurl.pathname + "(" + fullpath + " on the system)");
    fs.readFile(fullpath, (err, data) => {
      if (err) {console.error(err);
      if (err.code == "ENOENT") { //404 Not Found
        response.statusCode = 404;
        if (fullpath.endsWith('.html')) {try {let fi = fs.readFileSync(fullpath.replace(/\.html$/,'.md'));response.end(amistad(fi.toString()))} catch(e) {response.end(nsw_errors.handle(e,fullpath))}}
        else response.end(nsw_errors.handle(err,fullpath));
      } else if (err.code == "EISDIR") {
        if (rqurl.pathname.charAt(rqurl.pathname.length - 1) != "/") {response.setHeader("Location",rqurl.pathname+"/");response.statusCode = 301;response.end()}
        else {
        response.statusCode = 200;
        response.end(nsw_errors.handle(err,fullpath));}
      } else if (err.code == "EPERM") {
        response.statusCode = 401;
        response.end(nsw_errors.handle(err,fullpath));
      }} else {
        response.statusCode = 200;
        if (fullpath.endsWith('.md')) response.end(amistad(data.toString()));
        else response.end(data);
    }});})
};
if (cmd == "run") {
  include(args.file);
}

function amistad(data) {
  let out; let ssl = `<link rel='stylesheet' href="Ym9keSAqLGJvZHkgW3R5cGU9Y2hlY2tib3hde2JveC1zaXppbmc6Ym9yZGVyLWJveH1ib2R5IGhyOmFmdGVyLGJvZHk6YWZ0ZXJ7Y2xlYXI6Ym90aH1ib2R5IGhyLGJvZHkgaW1ne2JveC1zaXppbmc6Y29udGVudC1ib3h9Ym9keSAuYmxvYi1udW0sYm9keSBkZXRhaWxzIHN1bW1hcnl7Y3Vyc29yOnBvaW50ZXJ9QGZvbnQtZmFjZXtmb250LWZhbWlseTpvY3RpY29ucy1saW5rO3NyYzp1cmwoZGF0YTpmb250L3dvZmY7Y2hhcnNldD11dGYtODtiYXNlNjQsZDA5R1JnQUJBQUFBQUFad0FCQUFBQUFBQ0ZRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJFVTBsSEFBQUdhQUFBQUFnQUFBQUlBQUFBQVVkVFZVSUFBQVpjQUFBQUNnQUFBQW9BQVFBQVQxTXZNZ0FBQXlRQUFBQkpBQUFBWUZZRVUzUmpiV0Z3QUFBRGNBQUFBRVVBQUFDQUFKVGh2bU4yZENBQUFBVGtBQUFBQkFBQUFBUUFBQUFBWm5CbmJRQUFBN2dBQUFDeUFBQUJDVU0rOElobllYTndBQUFHVEFBQUFCQUFBQUFRQUJvQUkyZHNlV1lBQUFGc0FBQUJQQUFBQVp3Y0VxOXRhR1ZoWkFBQUFzZ0FBQUEwQUFBQU5naDRhOTFvYUdWaEFBQURDQUFBQUJvQUFBQWtDQThEUkdodGRIZ0FBQUw4QUFBQURBQUFBQXdHQUFDZmJHOWpZUUFBQXNBQUFBQUlBQUFBQ0FCaUFUQnRZWGh3QUFBQ3FBQUFBQmdBQUFBZ0FBOEFTbTVoYldVQUFBVG9BQUFCUWdBQUFsWHU3M3NPY0c5emRBQUFCaXdBQUFBZUFBQUFNRTNRcE9Cd2NtVndBQUFFYkFBQUFIWUFBQUIvYUZHcGszamFUWTZ4YThKQUdNVy9PNjJCRGkwdEpMWVFpbmNYRXlwWUlpR0pqU2dIbmlRNnVtVHNVRXlMbTVCVjZOREJQOFRwdHM2RjB2K2svMGFuMmkraXRIRHczdjIrOStEQktUenNKTm5XSk5UZ0hFeTRCZ0czRU1JOURDRURPR0VYekRBRFU1aEJLTUlnTlBacW9EM1NpbFZhWFpDRVIzL0k3QXR4RUpMdHp6dVpmSStWVmtwcnhUbFhTaFdLYjNUQmVjRzExcndvTmxtbW4xUDJXWWNKY3psMzJldFNwS256aUM3bFF5V2Uxc21WUHkvTHQ3S2MrMHZXWS9nQWdJSUVxQU45d2UwcHdLWHJlaU1hc3h2YWJEUU1NNHJpTytxeE0yb2d3REdPWlRYeHd4RGl5Y1FJY29ZRkJMajVLM0VJYVNjdEFxMmtUWWl3K3ltaGNlN3Z3TTlqU3FPOEp5VmQ1Ukg5Z3lUdDIrSi95VW1ZbElSMHMwNG42KzdWbTFvemV6VWVMRWFVamhhRFN1WEh3VlJndkxKbjF0UTd4aXVWdi9vY1RSRjQybU5nWkdCZ1lHYndaT0JpQUFGR0pCSU1BQWl6QUZvQUFBQmlBR0lBem5qYVkyQmtZR0FBNGluOHp3WGkrVzIrTWpDek1JREFwU3d2WHpDOTdaNElnOE4vQnhZR1pnY2dsNTJCQ1NRS0FBM2pDVjhDQUFCZkFBQUFBQVFBQUVCNDJtTmdaR0JnNGYzdkFDUVpRQUJJTWpLZ0FtWUFLRWdCWGdBQWVOcGpZR1k2d1RpQmdaV0JnMmttVXhvREE0TVBoR1pNWXpCaTFBSHlnVkxZUVVDYWF3cURBNFBDaHhobWgvOE9EREVzdkF3SGdNS01JRG5HTDB4N2dKUUNBd01BSmQ0TUZ3QUFBSGphWTJCZ1lHYUE0REFHUmdZUWtBSHlHTUY4TmdZcklNM0pJQUdWWVlEVCtBRWpBd3VERnBCbUE5S01ERXdNQ2g5aS92OEg4c0gwLzRkUWMxaUFtQWtBTGFVS0xnQUFBSGphVFk5TERzSWdFSWJ0Z3FIVVBwRGkzZ1BvQlZ5UlRtVGRkT21xVFhUaEVYcXJvYjJnUTFGandwRHZmd0NCZG1kWEM1QVZLRnUzZTVNZk5GSjI5S1RRVDQ4T2I5L2xxWXdPR1p4ZVVlbE4yVTJSNitjQXJndENKcGF1VzdVUUJxbkZrVXNqQVkva09VMWNQK0RBZ3Z4d24xY2haRHdVYmQ2Q0ZpbUdYd3p3RjZ0UGJGSWNqRWwrdnZtTS9ieUE0OGU2dFdyS0FybTRaSmxDYmRzcnhrc0wxQXdXbi95QlNKS3BZYnE4QVhhYVRiOEFBSGphMjhqQXdPQzAwWnJCZVFORFFPV08vL3NkQkJnWUdSaVlXWUFFRUxFd01URTR1em81WnpvNWIyQnhkbkZPY0FMeE5qQTZiMkJ5VHN3QzhqWXdnMFZsTnVvQ1RXQU1xTnpNenNvSzFyRWhOcUJ5RXllcmc1UE1KbFl1VnVlRVRLY2QvODl1QnBucHZJRVZvbWVITG9Nc0FBZTFJZDRBQUFBQUFBQjQyb1dRVDA3Q1FCVEd2MEpCaGFnazdIUXpLeGNhMnNKQ0UxaER0NFFGKzlKT1MwbmJhYVlEQ1Fmd0NKN0F1M0FIaitMTzEzRk1tbTZjbDc3ODV2dmVuMGtCakhDQmhmcFl1TmE1UGgxYzBlMlh1M2pFdldHN1VkUERMWjROOTJuT20rRUJYdUFiSG1JTVNSTXMrNGFVRWQ0TmQzQ0hEOE5kdk9MVHNBMkdMOE05UE9EYmNMK2hEN0MxeG9hSGVMSlNFYW8wRkVXMTRja3hDK1RVOFR4dnNZNlgwZUxQbVJocnkyV1Zpb0xwa3JicDg0TExRUEdJN2M2c09pVXpwV0lXUzVHemxTZ1V6ekxCU2lrT1BGVE9YcWx5N3JxeDBaMVE1QkFJb1pCU0ZpaFFZUU9PQkVka0NPZ1hUT0hBMDdIQUdqR1dpSWphUFpOVzEzLytsbTZTOUZUN3JMSEZKNmZRYmtBVE9HMWoyT0ZNdWNLSkpzeElWZlFPUmwrOUp5ZGE2U2wxZFVZaFNDbTFkeUNsZm9lRHZlNHFNWWRMRWJmcUhmM08vQWREdW1zakFBQjQybU5nWW9BQVpRWWpCbXlBR1lRWm1kaEw4ekxkREV5ZEFSZm9BcUlBQUFBQkFBTUFCd0FLQUJNQUIvLy9BQThBQVFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQUE9PSkgZm9ybWF0KCd3b2ZmJyl9Ym9keSAub2N0aWNvbntkaXNwbGF5OmlubGluZS1ibG9jaztmaWxsOmN1cnJlbnRDb2xvcjt2ZXJ0aWNhbC1hbGlnbjp0ZXh0LWJvdHRvbX1ib2R5IGRldGFpbHMsYm9keSB0YWJsZXtkaXNwbGF5OmJsb2NrfWJvZHkgLmFuY2hvcntmbG9hdDpsZWZ0O2xpbmUtaGVpZ2h0OjE7bWFyZ2luLWxlZnQ6LTIwcHg7cGFkZGluZy1yaWdodDo0cHh9Ym9keSAuYW5jaG9yOmZvY3Vze291dGxpbmU6MH1ib2R5IGgxIC5vY3RpY29uLWxpbmssYm9keSBoMiAub2N0aWNvbi1saW5rLGJvZHkgaDMgLm9jdGljb24tbGluayxib2R5IGg0IC5vY3RpY29uLWxpbmssYm9keSBoNSAub2N0aWNvbi1saW5rLGJvZHkgaDYgLm9jdGljb24tbGlua3tjb2xvcjojMWIxZjIzO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTt2aXNpYmlsaXR5OmhpZGRlbn1ib2R5IGgxOmhvdmVyIC5hbmNob3IsYm9keSBoMjpob3ZlciAuYW5jaG9yLGJvZHkgaDM6aG92ZXIgLmFuY2hvcixib2R5IGg0OmhvdmVyIC5hbmNob3IsYm9keSBoNTpob3ZlciAuYW5jaG9yLGJvZHkgaDY6aG92ZXIgLmFuY2hvcnt0ZXh0LWRlY29yYXRpb246bm9uZX1ib2R5IC5wbC1jb3JsLGJvZHkgYTpob3Zlcnt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfWJvZHkgaDE6aG92ZXIgLmFuY2hvciAub2N0aWNvbi1saW5rLGJvZHkgaDI6aG92ZXIgLmFuY2hvciAub2N0aWNvbi1saW5rLGJvZHkgaDM6aG92ZXIgLmFuY2hvciAub2N0aWNvbi1saW5rLGJvZHkgaDQ6aG92ZXIgLmFuY2hvciAub2N0aWNvbi1saW5rLGJvZHkgaDU6aG92ZXIgLmFuY2hvciAub2N0aWNvbi1saW5rLGJvZHkgaDY6aG92ZXIgLmFuY2hvciAub2N0aWNvbi1saW5re3Zpc2liaWxpdHk6dmlzaWJsZX1ib2R5ey1tcy10ZXh0LXNpemUtYWRqdXN0OjEwMCU7LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OjEwMCU7Y29sb3I6IzI0MjkyZTtmb250LWZhbWlseTotYXBwbGUtc3lzdGVtLEJsaW5rTWFjU3lzdGVtRm9udCxTZWdvZSBVSSxIZWx2ZXRpY2EsUm9ib3RvLEFyaWFsLHNhbnMtc2VyaWYsQXBwbGUgQ29sb3IgRW1vamksU2Vnb2UgVUkgRW1vamksU2Vnb2UgVUkgU3ltYm9sO2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjEuNTt3b3JkLXdyYXA6YnJlYWstd29yZH1ib2R5IC5wbC1je2NvbG9yOiM2YTczN2R9Ym9keSAucGwtYzEsYm9keSAucGwtcyAucGwtdntjb2xvcjojMDA1Y2M1fWJvZHkgLnBsLWUsYm9keSAucGwtZW57Y29sb3I6IzZmNDJjMX1ib2R5IC5wbC1zIC5wbC1zMSxib2R5IC5wbC1zbWl7Y29sb3I6IzI0MjkyZX1ib2R5IC5wbC1lbnR7Y29sb3I6IzIyODYzYX1ib2R5IC5wbC1re2NvbG9yOiNkNzNhNDl9Ym9keSAucGwtcGRzLGJvZHkgLnBsLXMsYm9keSAucGwtcyAucGwtcHNlIC5wbC1zMSxib2R5IC5wbC1zcixib2R5IC5wbC1zciAucGwtY2NlLGJvZHkgLnBsLXNyIC5wbC1zcmEsYm9keSAucGwtc3IgLnBsLXNyZXtjb2xvcjojMDMyZjYyfWJvZHkgLnBsLXNtdyxib2R5IC5wbC12e2NvbG9yOiNlMzYyMDl9Ym9keSAucGwtYnV7Y29sb3I6I2IzMWQyOH1ib2R5IC5wbC1paXtiYWNrZ3JvdW5kLWNvbG9yOiNiMzFkMjg7Y29sb3I6I2ZhZmJmY31ib2R5IC5wbC1jMntiYWNrZ3JvdW5kLWNvbG9yOiNkNzNhNDk7Y29sb3I6I2ZhZmJmY31ib2R5IC5wbC1jMjpiZWZvcmV7Y29udGVudDoiXk0ifWJvZHkgaHI6YWZ0ZXIsYm9keSBocjpiZWZvcmUsYm9keTphZnRlcixib2R5OmJlZm9yZXtjb250ZW50OiIiO2Rpc3BsYXk6dGFibGV9Ym9keSAucGwtc3IgLnBsLWNjZXtjb2xvcjojMjI4NjNhO2ZvbnQtd2VpZ2h0OjcwMH1ib2R5IC5wbC1tbHtjb2xvcjojNzM1YzBmfWJvZHkgLnBsLW1oLGJvZHkgLnBsLW1oIC5wbC1lbixib2R5IC5wbC1tc3tjb2xvcjojMDA1Y2M1O2ZvbnQtd2VpZ2h0OjcwMH1ib2R5IC5wbC1taXtjb2xvcjojMjQyOTJlO2ZvbnQtc3R5bGU6aXRhbGljfWJvZHkgLnBsLW1ie2NvbG9yOiMyNDI5MmU7Zm9udC13ZWlnaHQ6NzAwfWJvZHkgLnBsLW1ke2JhY2tncm91bmQtY29sb3I6I2ZmZWVmMDtjb2xvcjojYjMxZDI4fWJvZHkgLnBsLW1pMXtiYWNrZ3JvdW5kLWNvbG9yOiNmMGZmZjQ7Y29sb3I6IzIyODYzYX1ib2R5IC5wbC1tY3tiYWNrZ3JvdW5kLWNvbG9yOiNmZmViZGE7Y29sb3I6I2UzNjIwOX1ib2R5IC5wbC1taTJ7YmFja2dyb3VuZC1jb2xvcjojMDA1Y2M1O2NvbG9yOiNmNmY4ZmF9Ym9keSAucGwtbWRye2NvbG9yOiM2ZjQyYzE7Zm9udC13ZWlnaHQ6NzAwfWJvZHkgLnBsLWJhe2NvbG9yOiM1ODYwNjl9Ym9keSAucGwtc2d7Y29sb3I6Izk1OWRhNX1ib2R5IC5wbC1jb3Jse2NvbG9yOiMwMzJmNjJ9Ym9keSBzdW1tYXJ5e2Rpc3BsYXk6bGlzdC1pdGVtfWJvZHkgYXtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2NvbG9yOiMwMzY2ZDY7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Ym9keSBhOmFjdGl2ZSxib2R5IGE6aG92ZXJ7b3V0bGluZS13aWR0aDowfWJvZHkgaDF7bWFyZ2luOi42N2VtIDB9Ym9keSBpbWd7Ym9yZGVyLXN0eWxlOm5vbmV9Ym9keSBocntiYWNrZ3JvdW5kOjAgMDtvdmVyZmxvdzpoaWRkZW59Ym9keSBpbnB1dHtmb250OmluaGVyaXQ7bWFyZ2luOjA7b3ZlcmZsb3c6dmlzaWJsZTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc2l6ZTppbmhlcml0O2xpbmUtaGVpZ2h0OmluaGVyaXR9Ym9keSAuY29tbWl0LXRlYXNlLXNoYSxib2R5IGNvZGUsYm9keSBwcmV7Zm9udC1mYW1pbHk6U0ZNb25vLVJlZ3VsYXIsQ29uc29sYXMsTGliZXJhdGlvbiBNb25vLE1lbmxvLENvdXJpZXIsbW9ub3NwYWNlfWJvZHkgW3R5cGU9Y2hlY2tib3hde3BhZGRpbmc6MH1ib2R5IGgxLGJvZHkgaDIsYm9keSBoMyxib2R5IGg0LGJvZHkgaDUsYm9keSBoNixib2R5IHN0cm9uZ3tmb250LXdlaWdodDo2MDB9Ym9keSB0YWJsZXtib3JkZXItY29sbGFwc2U6Y29sbGFwc2U7Ym9yZGVyLXNwYWNpbmc6MDtvdmVyZmxvdzphdXRvO3dpZHRoOjEwMCV9Ym9keSB0ZCxib2R5IHRoe3BhZGRpbmc6MH1ib2R5IGJsb2NrcXVvdGV7bWFyZ2luOjB9Ym9keSBvbCBvbCxib2R5IHVsIG9se2xpc3Qtc3R5bGUtdHlwZTpsb3dlci1yb21hbn1ib2R5IG9sIG9sIG9sLGJvZHkgb2wgdWwgb2wsYm9keSB1bCBvbCBvbCxib2R5IHVsIHVsIG9se2xpc3Qtc3R5bGUtdHlwZTpsb3dlci1hbHBoYX1ib2R5IGRke21hcmdpbi1sZWZ0OjB9Ym9keSBpbnB1dDo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixib2R5IGlucHV0Ojotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uey13ZWJraXQtYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZTttYXJnaW46MH1ib2R5IC5ib3JkZXJ7Ym9yZGVyOjFweCBzb2xpZCAjZTFlNGU4IWltcG9ydGFudH1ib2R5IC5ib3JkZXItMHtib3JkZXI6MCFpbXBvcnRhbnR9Ym9keSAuYm9yZGVyLWJvdHRvbXtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZTFlNGU4IWltcG9ydGFudH1ib2R5IC5yb3VuZGVkLTF7Ym9yZGVyLXJhZGl1czozcHghaW1wb3J0YW50fWJvZHkgLmJnLXdoaXRle2JhY2tncm91bmQtY29sb3I6I2ZmZiFpbXBvcnRhbnR9Ym9keSAuYmctZ3JheS1saWdodHtiYWNrZ3JvdW5kLWNvbG9yOiNmYWZiZmMhaW1wb3J0YW50fWJvZHkgLnRleHQtZ3JheS1saWdodHtjb2xvcjojNmE3MzdkIWltcG9ydGFudH1ib2R5IC5tYi0we21hcmdpbi1ib3R0b206MCFpbXBvcnRhbnR9Ym9keSAubXktMnttYXJnaW4tYm90dG9tOjhweCFpbXBvcnRhbnQ7bWFyZ2luLXRvcDo4cHghaW1wb3J0YW50fWJvZHkgLnB5LTB7cGFkZGluZy1ib3R0b206MCFpbXBvcnRhbnQ7cGFkZGluZy10b3A6MCFpbXBvcnRhbnR9Ym9keSAucHktMntwYWRkaW5nLWJvdHRvbTo4cHghaW1wb3J0YW50O3BhZGRpbmctdG9wOjhweCFpbXBvcnRhbnR9Ym9keSAucGwtMyxib2R5IC5weC0ze3BhZGRpbmctbGVmdDoxNnB4IWltcG9ydGFudH1ib2R5IC5weC0ze3BhZGRpbmctcmlnaHQ6MTZweCFpbXBvcnRhbnR9Ym9keSBkbCxib2R5IGhye3BhZGRpbmc6MH1ib2R5IC5mNntmb250LXNpemU6MTJweCFpbXBvcnRhbnR9Ym9keSAubGgtY29uZGVuc2Vke2xpbmUtaGVpZ2h0OjEuMjUhaW1wb3J0YW50fWJvZHkgLnRleHQtYm9sZHtmb250LXdlaWdodDo2MDAhaW1wb3J0YW50fWJvZHkgZGwgZHQsYm9keSB0YWJsZSB0aHtmb250LXdlaWdodDo2MDB9Ym9keT46Zmlyc3QtY2hpbGR7bWFyZ2luLXRvcDowIWltcG9ydGFudH1ib2R5PjpsYXN0LWNoaWxke21hcmdpbi1ib3R0b206MCFpbXBvcnRhbnR9Ym9keSBhOm5vdChbaHJlZl0pe2NvbG9yOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Ym9keSBibG9ja3F1b3RlLGJvZHkgZGwsYm9keSBvbCxib2R5IHAsYm9keSBwcmUsYm9keSB0YWJsZSxib2R5IHVse21hcmdpbi1ib3R0b206MTZweDttYXJnaW4tdG9wOjB9Ym9keSBocntiYWNrZ3JvdW5kLWNvbG9yOiNlMWU0ZTg7Ym9yZGVyOjA7aGVpZ2h0Oi4yNWVtO21hcmdpbjoyNHB4IDB9Ym9keSBibG9ja3F1b3Rle2JvcmRlci1sZWZ0Oi4yNWVtIHNvbGlkICNkZmUyZTU7Y29sb3I6IzZhNzM3ZDtwYWRkaW5nOjAgMWVtfWJvZHkgYmxvY2txdW90ZT46Zmlyc3QtY2hpbGR7bWFyZ2luLXRvcDowfWJvZHkgYmxvY2txdW90ZT46bGFzdC1jaGlsZHttYXJnaW4tYm90dG9tOjB9Ym9keSBoMSxib2R5IGgyLGJvZHkgaDMsYm9keSBoNCxib2R5IGg1LGJvZHkgaDZ7Zm9udC13ZWlnaHQ6NjAwO2xpbmUtaGVpZ2h0OjEuMjU7bWFyZ2luLWJvdHRvbToxNnB4O21hcmdpbi10b3A6MjRweH1ib2R5IGgxe2ZvbnQtc2l6ZToyZW19Ym9keSBoMSxib2R5IGgye2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNlYWVjZWY7cGFkZGluZy1ib3R0b206LjNlbX1ib2R5IGgye2ZvbnQtc2l6ZToxLjVlbX1ib2R5IGgze2ZvbnQtc2l6ZToxLjI1ZW19Ym9keSBoNHtmb250LXNpemU6MWVtfWJvZHkgaDV7Zm9udC1zaXplOi44NzVlbX1ib2R5IGg2e2NvbG9yOiM2YTczN2Q7Zm9udC1zaXplOi44NWVtfWJvZHkgb2wsYm9keSB1bHtwYWRkaW5nLWxlZnQ6MmVtfWJvZHkgb2wgb2wsYm9keSBvbCB1bCxib2R5IHVsIG9sLGJvZHkgdWwgdWx7bWFyZ2luLWJvdHRvbTowO21hcmdpbi10b3A6MH1ib2R5IGxpe3dvcmQtd3JhcDpicmVhay1hbGx9Ym9keSBwcmUsYm9keSBwcmUgY29kZXt3b3JkLXdyYXA6bm9ybWFsfWJvZHkgbGk" from-fm-default>`;
  // toc // let datus = mdx.toc.insert(data);
  let front = mdfm(data);
  data = data.replace(/^---\n.*?\n---$/gm,'');
  let datae = md.render(data);
  if (front.attributes.stylesheet != undefined) ssl = `<link rel='stylesheet' href="${front.attributes.stylesheet}" from-front-matter>`;
  out = datae;
  return `<!DOCTYPE HTML><head><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.14.2/styles/default.min.css"><script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.14.2/highlight.min.js"></script><script>hljs.initHighlightingOnLoad();</script>
  <meta content="width=device-width,maximum-scale=1.0,initial-scale=1.0,minimum-scale=1.0,user-scalable=no" name="viewport"><title>${front.attributes.title || "Untitled"}</title>${ssl}</head><body>` + datae + `</body>`
}
